PRGNAME     = yabause.elf
HOST_CC		= gcc
CC			= /opt/gcw0-toolchain-static/bin/mipsel-linux-gcc
CXX			= /opt/gcw0-toolchain-static/bin/mipsel-linux-g++

PROFILE = 0
M68K_CORE = NO

ifeq ($(M68K_CORE), YES)
CFLAGS 		+= -DHAVE_C68K=1
ADD_OBJ		+= src/c68k/c68k.o src/c68k/c68kexec.o
endif

SRCDIR		= ./src ./src/gui ./src/titan 
SRCDIR		+= ./source/scalers ./source/ports/$(PORT) ./source/sound/$(SOUND_ENGINE) ./source/sound_output/$(SOUND_OUTPUT)
VPATH		= $(SRCDIR)
SRC_C		= $(foreach dir, $(SRCDIR), $(wildcard $(dir)/*.c))
SRC_CP		= $(foreach dir, $(SRCDIR), $(wildcard $(dir)/*.cpp))
OBJ_C		= $(notdir $(patsubst %.c, %.o, $(SRC_C)))
OBJ_CP		= $(notdir $(patsubst %.cpp, %.o, $(SRC_CP)))
OBJS		= $(OBJ_C) $(OBJ_CP)

CFLAGS		= -Wall -Wextra -mno-xgot -Ofast -fdata-sections -ffunction-sections -fsection-anchors -fno-builtin -mframe-header-opt -mno-fp-exceptions -mno-check-zero-division -fsingle-precision-constant -fno-common -march=mips32r2 -mtune=mips32r2 -flto -fno-PIC -mno-abicalls
CFLAGS		+= -fno-math-errno -fgcse-las -fgcse-sm -fmerge-all-constants -fno-stack-protector -fomit-frame-pointer -freorder-blocks-and-partition -freorder-functions
# -freorder-blocks-and-partition -freorder-functions

CFLAGS		+= -DLSB_FIRST
CFLAGS		+= -DHAVE_FLOORF=1 -DHAVE_STRCASECMP=1 -DHAVE_BUILTIN_BSWAP16=1 -DHAVE_BUILTIN_BSWAP32=1 -DHAVE_SYS_TIME_H=1 -DHAVE_STDINT_H=1 -DUSE_16BPP=1 -DUSE_RGB_565=1 -DHAVE_LIBSDL=1 -DFORCE_BITSHIFT -DGKD350H -DLOWER_PRECISION
CFLAGS		+= -DVERSION=1
CFLAGS		+= -Isrc -Isrc/gui -Isrc/titan -Isrc/c68k

SRCDIR		+= ./source/text/fb
CFLAGS		+= -Isource/text/fb

ifeq ($(PROFILE), YES)
CFLAGS 		+= -fprofile-generate=/media/roms/yaba_gcda
else ifeq ($(PROFILE), APPLY)
CFLAGS		+= -fprofile-use -fbranch-probabilities
endif

CXXFLAGS	= $(CFLAGS) -fno-rtti -fno-exceptions -std=gnu++11 -ftree-vectorize -fno-threadsafe-statics -fno-enforce-eh-specs -fstrict-enums -std=gnu++11

LDFLAGS     = -lc -lgcc -lm -lSDL -lasound -lz -Wl,-z,norelro -Wl,--build-id=none -Wl,-O1,--sort-common,--as-needed,--gc-sections -flto -no-pie -s

ifeq ($(M68K_CORE), YES)
all: src/c68k/gen68k $(PRGNAME)

src/c68k/c68kexec.o: src/c68k/gen68k

src/c68k/gen68k: src/c68k/c68kexec.c src/c68k/c68k.c src/c68k/gen68k.c
	$(HOST_CC) $(CFLAGS) -DC68K_GEN -o $@ $^
	cd src/c68k && ./gen68k
	cd ../..
else
all: $(PRGNAME)
endif

# Rules to make executable
$(PRGNAME): $(OBJS) $(ADD_OBJ)
	$(CC) $(CFLAGS) -o $(PRGNAME) $^ $(LDFLAGS)

$(OBJ_C) : %.o : %.c
	$(CC) $(CFLAGS) -std=gnu99 -c -o $@ $<
	
$(OBJ_CP) : %.o : %.cpp
	$(CXX) $(CXXFLAGS) -c -o $@ $<


clean:
	rm -f $(PRGNAME) *.o
